---
import startCase from "lodash/startCase";
import { Icon } from "astro-icon/components";

export interface Props {
    path: string;
    class?: string;
}

const { path, class: className } = Astro.props;

const Links = [
    { name: "Github", url: "https://github.com/", icon: "simple-icons:github" },
    {
        name: "Codesandbox",
        url: "https://codesandbox.io/s/github/",
        icon: "simple-icons:codesandbox"
    },
    {
        name: "Stackblitz",
        url: "https://stackblitz.com/github/",
        icon: "simple-icons:stackblitz"
    }
];

const getHeader = (segments: string[]) => {
    switch (segments.length) {
        case 4:
            return `${segments[0]} ${segments[1]} Example: ${segments[3]} (${segments[2]})`;
        case 3:
            return `${segments[0]} Example: ${segments[1]} ${segments[2]}`;
        case 2:
            return `${segments[0]} Example: ${segments[1]}`;
        default:
            console.warn("Should not have such segments");
            return "Example: " + segments.join(" ");
    }
};

const gitPiece = `${import.meta.env.PUBLIC_GITHUB_SUFFIX}/tree/${import.meta.env.PUBLIC_GITHUB_BRANCH}/examples/src/${path}`;
---

<div class:list={["flex flex-wrap items-center gap-x-10 gap-y-4", className]}>
    <h1 class="mb-0">{getHeader(path.split("/").map(startCase))}</h1>
    <div class="flex items-center gap-6 font-medium">
        {
            Links.map(link => (
                <a
                    href={`${link.url}${gitPiece}`}
                    target="_blank"
                    rel="noreferrer"
                    class="flex items-center gap-1"
                >
                    <Icon name={link.icon} />
                    {link.name}
                </a>
            ))
        }
    </div>
</div>
