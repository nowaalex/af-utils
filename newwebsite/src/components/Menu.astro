---
import MenuSubtree from "./MenuSubtree.astro";

export interface MenuItem {
    name: string;
    path: string;
    exact?: boolean;
    comparePath?: string;
    children?: readonly MenuItem[] | MenuItem[];
}

const { items, productName } = Astro.props;

interface Props {
    items: readonly MenuItem[] | MenuItem[];
    productName: string;
}
---

<input
    aria-hidden="true"
    type="checkbox"
    class="ds-menu-checkbox hidden"
    id="menu-checkbox"
/>
<div class="ds-menu-container">
    <div class="sticky top-0 flex gap-4 border-b bg-inherit p-4">
        <button class="ds-menu-opener"> op </button>
        <button class="ds-menu-closer"> cl </button>
        <nav aria-label="Breadcrumb" class="text-lg font-medium lg:text-xl">
            <a href="/" class="underline"> af-utils </a>
            <span class="px-2" aria-hidden="true"> / </span>
            <span class="text-slate-500" aria-current="page">
                {productName}
            </span>
        </nav>
    </div>
    <nav
        aria-label="Main navigation"
        class="prose prose-sm prose-ul:list-none prose-a:no-underline ds-menu-items"
    >
        {items.map(node => <MenuSubtree node={node} depth={0} />)}

        <h2>Links</h2>

        <ul>
            <li>
                <a
                    href={`https://github.com/${process.env.NEXT_PUBLIC_GITHUB_SUFFIX}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center gap-2"
                >
                    Github
                </a>
            </li>
            <li>
                <a
                    href={process.env.NEXT_PUBLIC_DISCORD_LINK}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center gap-2"
                >
                    Discord
                </a>
            </li>
        </ul>
    </nav>
</div>
<script>
    const menuCheckbox =
        document.querySelector<HTMLInputElement>("#menu-checkbox")!;

    const toggleMenu = () => {
        menuCheckbox.checked = !menuCheckbox.checked;
    };

    const toggleMenuWhenClickedOnLink: EventListener = e => {
        if (
            e.target instanceof HTMLAnchorElement &&
            e.target.getAttribute("href")?.startsWith("/")
        ) {
            toggleMenu();
        }
    };

    for (const btn of document.querySelectorAll(
        ".ds-menu-opener, .ds-menu-closer"
    )) {
        btn.addEventListener("click", toggleMenu);
    }

    document
        .querySelector(".ds-menu-items")!
        .addEventListener("click", toggleMenuWhenClickedOnLink);
</script>
