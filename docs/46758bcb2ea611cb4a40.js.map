{"version":3,"file":"46758bcb2ea611cb4a40.js","mappings":"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","sources":["webpack://website/../af-virtual-scroll/lib/index.esm.js"],"sourcesContent":["import t from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nimport { useReducer as e, useRef as s, useEffect as i, useState as r, useImperativeHandle as o, useCallback as n, memo as h, cloneElement as l } from \"react\";\n\nimport c from \"prop-types\";\n\nimport { jsx as a, jsxs as d } from \"react/jsx-runtime\";\n\nconst u = t => t + 1, f = (t, r, o) => {\n    const n = s(null), h = e(u, 0)[1];\n    return i((() => (t.on(h, ...o), () => t.off(h, ...o))), o), t.t ? \n    /*\n        Somebody tried to rerender, while we were in batch.\n        On batch finish component definitely must be rerendered.\n    */\n    t.queue(h) : n.current = r(t), n.current;\n}, m = \"VXMoQIx\", p = [ \"model\", \"children\", \"Spacer\" ], w = [ 0, 1 ], g = Date.now().toString(36), R = e => {\n    let {model: s, children: i, Spacer: r = \"div\"} = e, o = t(e, p);\n    return f(s, (({startIndex: t, endIndex: e, virtualTopOffset: s, setSpacerNode: n}) => {\n        const h = [ /*#__PURE__*/ a(r, {\n            className: m,\n            \"aria-hidden\": \"true\",\n            style: {\n                height: s\n            },\n            ref: n\n        }, g) ];\n        for (let s = t; s < e; s++) h.push(i(s, o));\n        return h;\n    }), w);\n}, b = (t, e) => e ? `${t} ${e}` : t, x = new Map, C = new ResizeObserver((t => {\n    for (const {target: e} of t) {\n        const t = x.get(e);\n        t && t(e);\n    }\n})), y = (t, e) => {\n    x.set(t, e), C.observe(t);\n}, _ = t => x.delete(t) && C.unobserve(t), v = \"gA3QcBA\", N = [ 3, 4 ], H = ({model: t}) => f(t, (t => /*#__PURE__*/ a(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: v,\n    style: {\n        height: t.widgetScrollHeight + t.extraStickyHeight\n    }\n})), N);\n\nconst M = (t, e, s) => {\n    let i = 0;\n    const r = () => {\n        i = 0, t.call(s);\n    }, o = () => {\n        0 === i && (i = setTimeout(r, e));\n    };\n    return o.cancel = () => {\n        clearTimeout(i), i = 0;\n    }, o;\n};\n\nclass S extends class {\n    constructor() {\n        this.i = Array.from({\n            length: 7\n        }, (() => [])), this.o = new Set, this.t = 0;\n    }\n    h(t, e, s) {\n        for (const i of e) this.i[i].splice(s ? 0 : 2147483647, 0, t);\n        return this;\n    }\n    on(t, ...e) {\n        return this.h(t, e, !1);\n    }\n    prependListener(t, ...e) {\n        return this.h(t, e, !0);\n    }\n    destructor() {\n        for (const t of this.i) t.splice(0);\n        this.o.clear();\n    }\n    off(t, ...e) {\n        for (const s of e) this.i[s].splice(this.i[s].indexOf(t) >>> 0, 1);\n        return this;\n    }\n    queue(t) {\n        \"production\" !== process.env.NODE_ENV && (this.t || console.error(\"trying to add event to batch queue, while _inBatch is 0\")), \n        this.o.add(t);\n    }\n    l(t) {\n        if (this.t) for (const e of this.i[t]) this.o.add(e); else for (const e of this.i[t]) e.call(this);\n        return this;\n    }\n    /* inspired by mobx */    startBatch() {\n        return this.t++, this;\n    }\n    endBatch() {\n        if (!--this.t) {\n            for (const t of this.o) t.call(this);\n            this.o.clear();\n        }\n        return this;\n    }\n} {\n    /* Provided from renderer */\n    /* must be >= 1 */\n    /* sticky elements ( for example table header/footer ) must influence ONLY on widgetScrollHeight */\n    setScrollContainerNode(t) {\n        this.scrollContainerNode = t || null;\n    }\n    /* will ne used as callback, so => */    setScrollTop(t) {\n        t !== this.u && (this.u = t, this.m());\n    }\n    updateExtraStickyHeight(t) {\n        t && (this.extraStickyHeight += t, this.l(4));\n    }\n    p() {\n        const t = Math.min(this.getIndex(this.u + this.g) + this.R, this.C);\n        return t !== this.endIndex && (this.endIndex = t, this.l(1)), this;\n    }\n    m() {\n        this.startBatch();\n        const t = Math.max(0, this.getIndex(this.u) - this.R);\n        return t !== this.startIndex && (this.startIndex = t, this.virtualTopOffset = this.getOffset(t), \n        this.l(0)), this.p().endBatch();\n    }\n    /* must be called when row height/heights change */    _() {\n        return this.startBatch().v().m().endBatch();\n    }\n    constructor() {\n        super(), this.u = 0, this.C = 0, this.R = 2, this.g = 0, this.N = 0, this.extraStickyHeight = 0, \n        this.H = 0, this.M = null, this.scrollContainerNode = null, this.setSpacerNode = t => {\n            this.M = t;\n        }, this.updateWidgetDimensions = ({offsetHeight: t, offsetWidth: e}) => {\n            this.startBatch(), t !== this.g && (this.g = t, this.l(5)), e !== this.N && (this.N = e, \n            this.l(6)), this.endBatch();\n        }, this.S = M(this.T, 200, this), this.startIndex = 0, this.endIndex = 0, this.virtualTopOffset = 0, \n        this.widgetScrollHeight = 0, this.on(this.S, 2, 5, 6).on(this.v, 2).on(this.p, 2, 5);\n    }\n    destructor() {\n        this.S.cancel(), super.destructor();\n    }\n    scrollToRow(t) {\n        this.scrollContainerNode ? this.scrollContainerNode.scrollTop = this.getOffset(t) : \"production\" !== process.env.NODE_ENV && console.error(\"scrollContainerNode is not set\");\n    }\n    v() {\n        const t = this.getOffset(this.C);\n        return t !== this.widgetScrollHeight && (this.widgetScrollHeight = t, this.l(3)), \n        this;\n    }\n    setParams(t, e, s) {\n        this.H = t, this.startBatch(), e !== this.R && (this.R = e, this.queue(this.m)), \n        s !== this.C && (this.C = s, this.l(2)), this.endBatch();\n    }\n    /* Calculated inside model */}\n\nconst T = class extends S {\n    /*\n      most significant bit of this.rowsQuantity;\n      caching it to avoid Math.clz32 calculations on every getIndex call\n  */\n    constructor() {\n        super(), this.O = [], this.P = [], this.D = 0, this\n        /* must be done before events, attached in ListBase */ .prependListener(this.j, 2).on(this.S, 0, 1);\n    }\n    j() {\n        const {C: t} = this;\n        if (t < 0 || t > 2147483647) throw new Error(`Wrong rowsQuantity: ${t}. Must be 0...2_147_483_647.`);\n        this.D = t && 1 << 31 - Math.clz32(t);\n        const e = this.O.length;\n        if (t > e) {\n            const s = this.O;\n            this.O = new Uint32Array(t), this.P = new Uint32Array(t + 1), this.O.set(s), this.O.fill(this.H, e), \n            /* \n          Creating fenwick tree from an array in linear time;\n          It is much more efficient, than calling updateRowHeight N times.\n      */\n            this.P.set(this.O, 1);\n            for (let e, s = 1; s <= t; s++) e = s + (s & -s), e <= t && (this.P[e] += this.P[s]);\n            this._();\n        }\n    }\n    getIndex(t) {\n        let e = 0;\n        for (let s, i = this.D; 0 !== i; i >>= 1) if (s = e + i, !(s > this.C)) {\n            if (t === this.P[s]) return s;\n            t > this.P[s] && (t -= this.P[s], e = s);\n        }\n        return e;\n    }\n    getOffset(t) {\n        if (\"production\" !== process.env.NODE_ENV && t > this.C) throw new Error(\"index must not be > rowsQuantity\");\n        let e = 0;\n        for (;t > 0; t -= t & -t) e += this.P[t];\n        return e;\n    }\n    /* i starts from 1 here; */    I(t, e, s) {\n        for (;t < s; t += t & -t) this.P[t] += e;\n    }\n    T() {\n        var t;\n        let e = null == (t = this.M) ? void 0 : t.nextElementSibling;\n        if (e) {\n            let t, s = this.startIndex, i = 0;\n            /* We can batch-update fenwick tree, if we know, that all indexes are updated in +1 - order. */            const r = Math.min(this.P.length, 1 << 32 - Math.clz32(this.endIndex - 1));\n            do {\n                t = e.offsetHeight - this.O[s], t && (this.O[s] += t, i += t, this.I(s + 1, t, r));\n            } while (++s < this.endIndex && (e = e.nextElementSibling));\n            i && (this.I(r, i, this.P.length), this._());\n        }\n    }\n};\n\nconst O = class extends S {\n    constructor(...t) {\n        super(...t), this.k = 0;\n    }\n    A(t) {\n        t !== this.k && (this.k = t, this._());\n    }\n    getIndex(t) {\n        /* rounding via bitwise hacks like |0 may not work here, because number may be > max(int32) */\n        return this.k && Math.trunc(t / this.k);\n    }\n    getOffset(t) {\n        return t * this.k;\n    }\n    T() {\n        if (this.C) {\n            var t;\n            const e = null == (t = this.M) ? void 0 : t.nextElementSibling;\n            e && this.A(e.offsetHeight);\n        }\n    }\n}, P = \"_5e-1cSu\", D = [ \"rowsQuantity\", \"children\", \"as\", \"fixed\", \"estimatedRowHeight\", \"overscanRowsCount\", \"dataRef\", \"onRangeEndMove\", \"className\" ], E = [], Q = e => {\n    let {rowsQuantity: s, children: h, as: l = \"div\", fixed: c = !1, estimatedRowHeight: u = 20, overscanRowsCount: f = 2, dataRef: m, onRangeEndMove: p, className: w} = e, g = t(e, D);\n    const [R] = r((() => new (c ? O : T)));\n    o(m, (() => R), E);\n    const x = n((t => {\n        R.scrollContainerNode && _(R.scrollContainerNode), R.setScrollContainerNode(t), \n        t && y(t, R.updateWidgetDimensions);\n    }), E);\n    if (R.startBatch().setParams(u, f, s), i((() => {\n        R.endBatch();\n    })), i((() => {\n        if (p) {\n            const t = () => p(R);\n            return t(), R.on(t, 2, 1), () => R.off(t, 2, 1);\n        }\n    }), [ p ]), i((() => () => R.destructor()), E), \"production\" !== process.env.NODE_ENV) {\n        R instanceof (c ? O : T) || console.warn(\"\\n                'fixed' prop is taken into account ONLY during initial component mount.\\n                All future changes are ignored. You must decide once.\");\n    }\n    /*\n      tabIndex=\"0\" is for proper keyboard nav\n      https://bugzilla.mozilla.org/show_bug.cgi?id=1346159\n  */    /*#__PURE__*/\n    return d(l, Object.assign({}, g, {\n        tabIndex: \"0\",\n        className: b(P, w),\n        ref: x,\n        onScroll: t => R.setScrollTop(t.target.scrollTop),\n        children: [ /*#__PURE__*/ a(H, {\n            model: R\n        }), h(R) ]\n    }));\n};\n\n\"production\" !== process.env.NODE_ENV && (Q.propTypes = {\n    rowsQuantity: c.number.isRequired,\n    Container: c.elementType,\n    className: c.string,\n    fixed: c.bool,\n    overscanRowsCount: c.number,\n    estimatedRowHeight: c.number,\n    onRangeEndMove: c.func\n});\n\nconst j = [ \"children\" ], I = e => {\n    let {children: s} = e, i = t(e, j);\n    /*#__PURE__*/\n    return a(Q, Object.assign({}, i, {\n        children: t => /*#__PURE__*/ a(R, {\n            model: t,\n            children: s\n        })\n    }));\n};\n\n\"production\" !== process.env.NODE_ENV && (I.propTypes = {\n    /**\n   * @param {number} rowIndex\n   * @returns {any} one row element child. Fragments are not supported.\n   */\n    children: c.func.isRequired\n});\n\nconst k = /*#__PURE__*/ h(I), A = ({model: t, children: e}) => {\n    const [s, o] = r();\n    return i((() => {\n        if (s && t) {\n            let e = 0;\n            return y(s, (({offsetHeight: s}) => {\n                t.updateExtraStickyHeight(s - e), e = s;\n            })), () => {\n                _(s), t.updateExtraStickyHeight(-e);\n            };\n        }\n    }), [ s, t ]), /*#__PURE__*/ l(e, {\n        ref: o\n    });\n}, W = /*#__PURE__*/ h((({columns: t}) => /*#__PURE__*/ a(\"colgroup\", {\n    children: t.map((({dataKey: t, background: e, border: s, width: i}) => /*#__PURE__*/ a(\"col\", {\n        style: {\n            width: i,\n            background: e,\n            border: s\n        }\n    }, t)))\n}))), B = ({index: t, columns: e, getRowData: s, getRowProps: i, Cell: r}) => {\n    const o = s(t);\n    /*#__PURE__*/\n    return a(\"tr\", Object.assign({}, i && i(o, t), {\n        children: o ? e.map((t => {\n            const e = t.Cell || r;\n            /*#__PURE__*/\n            return a(\"td\", {\n                children: /*#__PURE__*/ a(e, {\n                    rowData: o,\n                    column: t\n                })\n            }, t.dataKey);\n        })) : /*#__PURE__*/ a(\"td\", {\n            colSpan: e.length,\n            children: \" \"\n        })\n    }));\n}, K = (t, e) => /*#__PURE__*/ a(e.Row, Object.assign({\n    index: t\n}, e), t), L = t => t.map((t => /*#__PURE__*/ a(\"th\", {\n    style: {\n        minWidth: t.minWidth\n    },\n    children: t.label\n}, t.dataKey))), q = ({rowData: t, column: e}) => {\n    const {render: s, dataKey: i, format: r} = e, o = t[i];\n    return void 0 === o ? \" \" : s ? s(o, t) : r ? r(o) : o;\n}, $ = \"_2wTxqHK\", U = \"_1kcsJP_\", V = [ \"columns\", \"getRowData\", \"getRowProps\", \"renderRow\", \"Row\", \"renderHeaderCells\", \"renderTfootContent\", \"Cell\", \"headless\", \"className\" ], Y = e => {\n    let {columns: s, getRowData: i, getRowProps: r, renderRow: o, Row: n, renderHeaderCells: h, renderTfootContent: l, Cell: c, headless: u, className: f} = e, m = t(e, V);\n    /*#__PURE__*/\n    return a(Q, Object.assign({\n        className: b($, f)\n    }, m, {\n        children: t => /*#__PURE__*/ d(\"table\", {\n            className: U,\n            children: [ /*#__PURE__*/ a(W, {\n                columns: s\n            }), u ? null : /*#__PURE__*/ a(A, {\n                model: t,\n                children: /*#__PURE__*/ a(\"thead\", {\n                    children: /*#__PURE__*/ a(\"tr\", {\n                        children: h(s)\n                    })\n                })\n            }), /*#__PURE__*/ a(\"tbody\", {\n                children: /*#__PURE__*/ a(R, {\n                    model: t,\n                    Spacer: \"tr\",\n                    columns: s,\n                    getRowData: i,\n                    getRowProps: r,\n                    Row: n,\n                    Cell: c,\n                    children: o\n                })\n            }), l ? /*#__PURE__*/ a(A, {\n                model: t,\n                children: /*#__PURE__*/ a(\"tfoot\", {\n                    children: l(s)\n                })\n            }) : null ]\n        })\n    }));\n};\n\n\"production\" !== process.env.NODE_ENV && (Y.propTypes = {\n    className: c.string,\n    columns: c.arrayOf(c.oneOfType([ c.string, c.shape({\n        // unique key for column\n        dataKey: c.string.isRequired,\n        // for details see CellComponent implementation\n        format: c.func,\n        render: c.func,\n        formatTotal: c.func,\n        totals: c.string,\n        // column props, affecting colgroup > col tags\n        background: c.string,\n        border: c.string,\n        width: c.oneOfType([ c.number, c.string ]),\n        // works pretty shitty in col tag\n        minWidth: c.oneOfType([ c.number, c.string ]),\n        CellComponent: c.elementType,\n        getCellExtraProps: c.func\n    }) ])).isRequired,\n    getRowData: c.func.isRequired,\n    getRowProps: c.func,\n    renderTfootContent: c.func,\n    renderHeaderCells: c.func,\n    Row: c.elementType,\n    Cell: c.elementType,\n    headless: c.bool\n}), Y.defaultProps = {\n    headless: !1,\n    renderRow: K,\n    Row: B,\n    renderHeaderCells: L,\n    Cell: q\n};\n\nconst z = /*#__PURE__*/ h(Y);\n\nexport { q as Cell, Q as Container, A as ExtraHeight, k as List, B as Row, R as Rows, z as Table, b as cx, L as renderHeaderCells, K as renderRow };\n"],"names":["u","t","f","r","o","n","s","h","e","i","on","off","queue","current","p","w","g","Date","now","toString","R","model","children","Spacer","startIndex","endIndex","virtualTopOffset","setSpacerNode","a","className","style","height","ref","push","b","x","Map","C","ResizeObserver","target","get","y","set","observe","_","delete","unobserve","N","H","widgetScrollHeight","extraStickyHeight","S","constructor","this","Array","from","length","Set","splice","prependListener","destructor","clear","indexOf","add","l","call","startBatch","endBatch","setScrollContainerNode","scrollContainerNode","setScrollTop","m","updateExtraStickyHeight","Math","min","getIndex","max","getOffset","v","super","M","updateWidgetDimensions","offsetHeight","offsetWidth","setTimeout","cancel","clearTimeout","T","scrollToRow","scrollTop","setParams","O","P","D","j","Error","clz32","Uint32Array","fill","I","nextElementSibling","k","A","trunc","E","Q","rowsQuantity","as","fixed","c","estimatedRowHeight","overscanRowsCount","dataRef","onRangeEndMove","d","Object","assign","tabIndex","onScroll","W","columns","map","dataKey","background","border","width","V","Y","getRowData","getRowProps","renderRow","Row","renderHeaderCells","renderTfootContent","Cell","headless","defaultProps","index","rowData","column","colSpan","minWidth","label","render","format","z"],"sourceRoot":""}