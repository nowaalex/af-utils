{"version":3,"sources":["webpack://af-virtual-scroll/./src/components/List/index.js","webpack://af-virtual-scroll/./src/components/common/Rows/style.module.scss?bf14","webpack://af-virtual-scroll/./src/components/common/Rows/index.js","webpack://af-virtual-scroll/./src/examples/list/equalHeights/index.js"],"names":["List","children","props","model","renderRow","memo","Events","START_INDEX","END_INDEX","spacerKey","Math","random","toString","Spacer","rest","useSubscription","startIndex","endIndex","virtualTopOffset","setSpacerNode","result","className","css","aria-hidden","style","height","ref","i","push","wrapperStyle","minWidth","maxWidth","fixed","rowsQuantity"],"mappings":";4MAMA,MAAMA,EAAO,QAAC,SAAEC,GAAH,EAAgBC,GAAhB,8BACT,SAAC,IAAD,iBAAeA,EAAf,UACKC,IAAS,SAAC,IAAD,CAAMA,MAAOA,EAAOC,UAAWH,QAYjD,GAAeI,UAAML,I,mFCnBrB,SAAgB,OAAS,2B,eCGzB,MAAMM,EAAS,CAAEC,KAAaC,MAExBC,EAAYC,KAAKC,SAASC,SAAS,IAyBzC,EAvBa,QAAC,MAAET,EAAF,UAASC,EAAT,OAAoBS,EAAS,OAA9B,EAAwCC,GAAxC,gDAAmDC,OAC5DZ,GACA,EAAGa,aAAYC,WAAUC,mBAAkBC,oBAEvC,MAAMC,EAAS,EACX,SAACP,EAAD,CAEIQ,UAAWC,UACXC,cAAY,OACZC,MAAO,CAAEC,OAAQP,GACjBQ,IAAKP,GAJAV,IAQb,IAAK,IAAIkB,EAAIX,EAAYW,EAAIV,EAAUU,IACnCP,EAAOQ,KAAKxB,EAAWuB,EAAGb,IAG9B,OAAOM,IAEXd,K,oFCpBJ,MAAMuB,EAAe,CAAEC,SAAU,IAAKC,SAAU,KAQhD,EANmB,KACf,SAAC,IAAD,CAAMC,OAAK,EAACR,MAAOK,EAAcI,aAAc,IAA/C,SACKN,IAAK,kCAAkBA,IAARA","file":"d8a0d7a3f94b73871865.js","sourcesContent":["import { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Rows from \"../common/Rows\";\r\nimport Container from \"../common/Container\";\r\n\r\nconst List = ({ children, ...props }) => (\r\n    <Container {...props}>\r\n        {model => <Rows model={model} renderRow={children} />}\r\n    </Container>\r\n);\r\n\r\nList.propTypes = {\r\n    /**\r\n     * @param {number} rowIndex\r\n     * @returns {any} one row element child. Fragments are not supported.\r\n     */\r\n    children: PropTypes.func.isRequired\r\n}\r\n\r\nexport default memo( List );","// extracted by mini-css-extract-plugin\nexport default {\"spacer\":\"_2q9_Y-5hrbxfXeVDNj4Bxk\"};","import useSubscription from \"hooks/useSubscription\";\r\nimport { START_INDEX, END_INDEX } from \"constants/events\";\r\nimport css from \"./style.module.scss\";\r\n\r\nconst Events = [ START_INDEX, END_INDEX ];\r\n\r\nconst spacerKey = Math.random().toString(36);\r\n\r\nconst Rows = ({ model, renderRow, Spacer = \"div\", ...rest }) => useSubscription(\r\n    model, \r\n    ({ startIndex, endIndex, virtualTopOffset, setSpacerNode }) => {\r\n\r\n        const result = [\r\n            <Spacer\r\n                key={spacerKey}\r\n                className={css.wrapper}\r\n                aria-hidden=\"true\"\r\n                style={{ height: virtualTopOffset}}\r\n                ref={setSpacerNode}\r\n            />\r\n        ];    \r\n        \r\n        for( let i = startIndex; i < endIndex; i++ ){\r\n            result.push(renderRow( i, rest ));\r\n        }\r\n\r\n        return result;\r\n    },\r\n    Events\r\n);\r\n\r\nexport default Rows;","import { List } from \"af-virtual-scroll\";\n\n\n/*\n    Initial dimensions are not required, but flex-grow/min-width/smth. should be set,\n    because otherwise List may collapse to zero-width\n*/\n\nconst wrapperStyle = { minWidth: 200, maxWidth: 400 };\n\nconst SimpleList = () => (\n    <List fixed style={wrapperStyle} rowsQuantity={1000}>\n        {i => <div key={i}>row {i}</div>}\n    </List>\n);\n\nexport default SimpleList;"],"sourceRoot":""}