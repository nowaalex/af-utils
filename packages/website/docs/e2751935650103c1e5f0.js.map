{"version":3,"file":"e2751935650103c1e5f0.js","mappings":";wLAIA,MAmCA,EA1Bc,KAEV,MAAQA,EAAOC,IAAaC,EAAAA,EAAAA,UAAS,KAC7BC,EAAWC,IAAeF,EAAAA,EAAAA,WAAU,GAEtCG,GAAsBC,EAAAA,EAAAA,cAAaC,OAASC,aAAAA,EAAcC,SAAAA,MAC5D,GAAID,IAAiBC,EAAU,CAC3BL,GAAY,GACZ,MAAMM,QAjBe,IAAIC,SAASC,GAAWC,WACrDD,EACA,IACAE,MAAMC,KAAK,CAAEC,OAAQ,IAAK,IAAM,CAC5BC,IAAAA,MAAAA,QACAA,IAAAA,MAAAA,mBAaIhB,GAAUiB,GAAKA,EAAEC,OAAQT,KACzBN,GAAY,MAEjB,IAEH,OACI,SAAC,KAAD,CAAMI,aAAcR,EAAMgB,OAAQI,eAAgBjB,EAAY,KAAOE,EAArE,SACKgB,IACG,4BACI,gBAAKC,IAAKtB,EAAMqB,GAAG,MACnB,uBAAIrB,EAAMqB,GAAG,OAFPA","sources":["webpack://website/./src/examples/list/loadOnDemand/index.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport faker from \"faker\";\nimport { List } from \"af-virtual-scroll\";\n\nconst fetchArrayOfImages = () => new Promise( resolve => setTimeout(\n    resolve,\n    200,\n    Array.from({ length: 5 }, () => [\n        faker.image.image(),\n        faker.lorem.paragraphs()\n    ])\n));\n\nconst Posts = () => {\n\n    const [ posts, setPosts ] = useState([]);\n    const [ isLoading, setLoading ] = useState( false );\n\n    const rangeEndMoveHandler = useCallback( async ({ rowsQuantity, endIndex }) => {\n        if( rowsQuantity === endIndex ){\n            setLoading( true );\n            const images = await fetchArrayOfImages();\n            setPosts( p => p.concat( images ) );\n            setLoading( false );\n        }\n    }, []);\n\n    return (\n        <List rowsQuantity={posts.length} onRangeEndMove={isLoading ? null : rangeEndMoveHandler}>\n            {i => (\n                <div key={i}>\n                    <img src={posts[i][0]} />\n                    <p>{posts[i][1]}</p>\n                </div>\n            )}\n        </List>\n    );\n}\n\nexport default Posts;"],"names":["posts","setPosts","useState","isLoading","setLoading","rangeEndMoveHandler","useCallback","async","rowsQuantity","endIndex","images","Promise","resolve","setTimeout","Array","from","length","faker","p","concat","onRangeEndMove","i","src"],"sourceRoot":""}