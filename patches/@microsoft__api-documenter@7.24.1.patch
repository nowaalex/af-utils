diff --git a/lib/documenters/MarkdownDocumenter.js b/lib/documenters/MarkdownDocumenter.js
index a0ef785a91a21071dd8cfc07054741499562a66b..65a81c7c03242ed4070f4b02ff6a80c8a8020bb7 100644
--- a/lib/documenters/MarkdownDocumenter.js
+++ b/lib/documenters/MarkdownDocumenter.js
@@ -103,7 +103,7 @@ class MarkdownDocumenter {
                 output.appendNode(new DocHeading_1.DocHeading({ configuration, title: `${scopedName} function` }));
                 break;
             case api_extractor_model_1.ApiItemKind.Model:
-                output.appendNode(new DocHeading_1.DocHeading({ configuration, title: `API Reference` }));
+                // output.appendNode(new DocHeading_1.DocHeading({ configuration, title: `API Reference` }));
                 break;
             case api_extractor_model_1.ApiItemKind.Namespace:
                 output.appendNode(new DocHeading_1.DocHeading({ configuration, title: `${scopedName} namespace` }));
@@ -886,7 +886,7 @@ class MarkdownDocumenter {
         output.appendNodeInParagraph(new tsdoc_1.DocLinkTag({
             configuration,
             tagName: '@link',
-            linkText: 'Home',
+            linkText: 'Reference home',
             urlDestination: this._getLinkFilenameForApiItem(this._apiModel)
         }));
         for (const hierarchyItem of apiItem.getHierarchy()) {
@@ -1003,7 +1003,7 @@ class MarkdownDocumenter {
         return baseName + '.md';
     }
     _getLinkFilenameForApiItem(apiItem) {
-        return './' + this._getFilenameForApiItem(apiItem);
+        return process.env.API_DOCUMENTER_LINK_BASE + this._getFilenameForApiItem(apiItem).replace( /\.md$/, "" );
     }
     _deleteOldOutputFiles() {
         console.log('Deleting old output from ' + this._outputFolder);
